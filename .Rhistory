for(i in 1:(ncat-1)){
if(result$network$response == "multinomial"){
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)[,,i]
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)[,,i]
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)[,,i]
} else{
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)
}
lower <- lower[upper.tri(lower)]
OR <- OR[upper.tri(OR)]
upper <- upper[upper.tri(upper)]
odds <- data.frame(lower = lower, OR = OR, upper = upper)
if(result$network$response %in% c("binomial", "multinomial")){
odds <- exp(odds) #report odds ratio instead of log odds ratio
}
Treat.order <- result$network$Treat.order
ts <- 1:length(Treat.order)
comps <- combn(ts, 2)
name <- rep(NA, ncol(comps))
for(j in 1:ncol(comps)){
name[j] <- paste0(Treat.order[comps[2,j]]," vs ", Treat.order[comps[1,j]])
}
odds$name <- name
if(is.null(ticks.position)){
if(result$network$response %in% c("binomial", "multinomial")){
ticks <- c(0.1, 0.2, 0.5, 1, 2, 5, 10)
} else if(result$network$response == "normal"){
ticks <- pretty(c(min(odds$lower, na.rm =TRUE), max(odds$upper, na.rm = TRUE)))
}
} else{
ticks <- ticks.position
}
p <- ggplot(odds, aes(y = OR, x = name)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .2) +
scale_x_discrete(limits = name) +
geom_hline(yintercept = 1, linetype = 2) +
coord_flip() +
theme_bw() +
theme(plot.margin = unit(c(1,label.margin,1,1), "lines"))
if(result$network$response %in% c("binomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = "Network Meta-analysis Forest plot") +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("multinomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = paste0("Network Meta-analysis Forest plot", ": Multinomial Category ", i)) +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("normal")){
p <- p + labs(x = "Treatment comparison", y = "Continuous Scale", title = "Network Meta-analysis Forest plot") +
scale_y_continuous(breaks = ticks, labels = ticks)
}
xlim.range <- ggplot_build(p)$layout$panel_ranges[[1]]$x.range
p <- p + geom_text(aes(label = paste0(sprintf("%0.2f", round(OR, digits = 2)), " [", sprintf("%0.2f", round(lower, digits = 2)) , ", ", sprintf("%0.2f", round(upper, digits = 2)), "]")), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = 1:length(comps[1,]))   # hjust = -1, vjust = 2)
median_name_location <- ifelse(length(odds[,1]) <= 3, length(comps[1,]) + 0.5, length(comps[1,]) + 1)
p <- p + geom_text(aes(label = "Median [lower, upper]"), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = median_name_location)
gt <- ggplot_gtable(ggplot_build(p))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
grid.draw(gt)
#  plot.new()
while(!par('page')) plot.new()
}
ncat <- ifelse(result$network$response == "multinomial", result$network$ncat, 1)
for(i in 1:(ncat-1)){
if(result$network$response == "multinomial"){
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)[,,i]
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)[,,i]
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)[,,i]
} else{
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)
}
lower <- lower[upper.tri(lower)]
OR <- OR[upper.tri(OR)]
upper <- upper[upper.tri(upper)]
odds <- data.frame(lower = lower, OR = OR, upper = upper)
if(result$network$response %in% c("binomial", "multinomial")){
odds <- exp(odds) #report odds ratio instead of log odds ratio
}
Treat.order <- result$network$Treat.order
ts <- 1:length(Treat.order)
comps <- combn(ts, 2)
name <- rep(NA, ncol(comps))
for(j in 1:ncol(comps)){
name[j] <- paste0(Treat.order[comps[2,j]]," vs ", Treat.order[comps[1,j]])
}
odds$name <- name
if(is.null(ticks.position)){
if(result$network$response %in% c("binomial", "multinomial")){
ticks <- c(0.1, 0.2, 0.5, 1, 2, 5, 10)
} else if(result$network$response == "normal"){
ticks <- pretty(c(min(odds$lower, na.rm =TRUE), max(odds$upper, na.rm = TRUE)))
}
} else{
ticks <- ticks.position
}
p <- ggplot(odds, aes(y = OR, x = name)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .2) +
scale_x_discrete(limits = name) +
geom_hline(yintercept = 1, linetype = 2) +
coord_flip() +
theme_bw() +
theme(plot.margin = unit(c(1,label.margin,1,1), "lines"))
if(result$network$response %in% c("binomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = "Network Meta-analysis Forest plot") +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("multinomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = paste0("Network Meta-analysis Forest plot", ": Multinomial Category ", i)) +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("normal")){
p <- p + labs(x = "Treatment comparison", y = "Continuous Scale", title = "Network Meta-analysis Forest plot") +
scale_y_continuous(breaks = ticks, labels = ticks)
}
xlim.range <- ggplot_build(p)$layout$panel_ranges[[1]]$x.range
p <- p + geom_text(aes(label = paste0(sprintf("%0.2f", round(OR, digits = 2)), " [", sprintf("%0.2f", round(lower, digits = 2)) , ", ", sprintf("%0.2f", round(upper, digits = 2)), "]")), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = 1:length(comps[1,]))   # hjust = -1, vjust = 2)
median_name_location <- ifelse(length(odds[,1]) <= 3, length(comps[1,]) + 0.5, length(comps[1,]) + 1)
p <- p + geom_text(aes(label = "Median [lower, upper]"), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = median_name_location)
gt <- ggplot_gtable(ggplot_build(p))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
grid.draw(gt)
plot.new()
}
for(i in 1:(ncat-1)){
if(result$network$response == "multinomial"){
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)[,,i]
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)[,,i]
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)[,,i]
} else{
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)
}
lower <- lower[upper.tri(lower)]
OR <- OR[upper.tri(OR)]
upper <- upper[upper.tri(upper)]
odds <- data.frame(lower = lower, OR = OR, upper = upper)
if(result$network$response %in% c("binomial", "multinomial")){
odds <- exp(odds) #report odds ratio instead of log odds ratio
}
Treat.order <- result$network$Treat.order
ts <- 1:length(Treat.order)
comps <- combn(ts, 2)
name <- rep(NA, ncol(comps))
for(j in 1:ncol(comps)){
name[j] <- paste0(Treat.order[comps[2,j]]," vs ", Treat.order[comps[1,j]])
}
odds$name <- name
if(is.null(ticks.position)){
if(result$network$response %in% c("binomial", "multinomial")){
ticks <- c(0.1, 0.2, 0.5, 1, 2, 5, 10)
} else if(result$network$response == "normal"){
ticks <- pretty(c(min(odds$lower, na.rm =TRUE), max(odds$upper, na.rm = TRUE)))
}
} else{
ticks <- ticks.position
}
p <- ggplot(odds, aes(y = OR, x = name)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .2) +
scale_x_discrete(limits = name) +
geom_hline(yintercept = 1, linetype = 2) +
coord_flip() +
theme_bw() +
theme(plot.margin = unit(c(1,label.margin,1,1), "lines"))
if(result$network$response %in% c("binomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = "Network Meta-analysis Forest plot") +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("multinomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = paste0("Network Meta-analysis Forest plot", ": Multinomial Category ", i)) +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("normal")){
p <- p + labs(x = "Treatment comparison", y = "Continuous Scale", title = "Network Meta-analysis Forest plot") +
scale_y_continuous(breaks = ticks, labels = ticks)
}
xlim.range <- ggplot_build(p)$layout$panel_ranges[[1]]$x.range
p <- p + geom_text(aes(label = paste0(sprintf("%0.2f", round(OR, digits = 2)), " [", sprintf("%0.2f", round(lower, digits = 2)) , ", ", sprintf("%0.2f", round(upper, digits = 2)), "]")), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = 1:length(comps[1,]))   # hjust = -1, vjust = 2)
median_name_location <- ifelse(length(odds[,1]) <= 3, length(comps[1,]) + 0.5, length(comps[1,]) + 1)
p <- p + geom_text(aes(label = "Median [lower, upper]"), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = median_name_location)
gt <- ggplot_gtable(ggplot_build(p))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
grid.draw(gt)
grid.newpage()
}
for(i in 1:(ncat-1)){
if(result$network$response == "multinomial"){
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)[,,i]
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)[,,i]
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)[,,i]
} else{
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)
}
lower <- lower[upper.tri(lower)]
OR <- OR[upper.tri(OR)]
upper <- upper[upper.tri(upper)]
odds <- data.frame(lower = lower, OR = OR, upper = upper)
if(result$network$response %in% c("binomial", "multinomial")){
odds <- exp(odds) #report odds ratio instead of log odds ratio
}
Treat.order <- result$network$Treat.order
ts <- 1:length(Treat.order)
comps <- combn(ts, 2)
name <- rep(NA, ncol(comps))
for(j in 1:ncol(comps)){
name[j] <- paste0(Treat.order[comps[2,j]]," vs ", Treat.order[comps[1,j]])
}
odds$name <- name
if(is.null(ticks.position)){
if(result$network$response %in% c("binomial", "multinomial")){
ticks <- c(0.1, 0.2, 0.5, 1, 2, 5, 10)
} else if(result$network$response == "normal"){
ticks <- pretty(c(min(odds$lower, na.rm =TRUE), max(odds$upper, na.rm = TRUE)))
}
} else{
ticks <- ticks.position
}
p <- ggplot(odds, aes(y = OR, x = name)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .2) +
scale_x_discrete(limits = name) +
geom_hline(yintercept = 1, linetype = 2) +
coord_flip() +
theme_bw() +
theme(plot.margin = unit(c(1,label.margin,1,1), "lines"))
if(result$network$response %in% c("binomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = "Network Meta-analysis Forest plot") +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("multinomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = paste0("Network Meta-analysis Forest plot", ": Multinomial Category ", i)) +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("normal")){
p <- p + labs(x = "Treatment comparison", y = "Continuous Scale", title = "Network Meta-analysis Forest plot") +
scale_y_continuous(breaks = ticks, labels = ticks)
}
xlim.range <- ggplot_build(p)$layout$panel_ranges[[1]]$x.range
p <- p + geom_text(aes(label = paste0(sprintf("%0.2f", round(OR, digits = 2)), " [", sprintf("%0.2f", round(lower, digits = 2)) , ", ", sprintf("%0.2f", round(upper, digits = 2)), "]")), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = 1:length(comps[1,]))   # hjust = -1, vjust = 2)
median_name_location <- ifelse(length(odds[,1]) <= 3, length(comps[1,]) + 0.5, length(comps[1,]) + 1)
p <- p + geom_text(aes(label = "Median [lower, upper]"), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = median_name_location)
gt <- ggplot_gtable(ggplot_build(p))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
grid.draw(gt)
grid.newpage()
}
for(i in 1:(ncat-1)){
if(result$network$response == "multinomial"){
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)[,,i]
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)[,,i]
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)[,,i]
} else{
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)
}
lower <- lower[upper.tri(lower)]
OR <- OR[upper.tri(OR)]
upper <- upper[upper.tri(upper)]
odds <- data.frame(lower = lower, OR = OR, upper = upper)
if(result$network$response %in% c("binomial", "multinomial")){
odds <- exp(odds) #report odds ratio instead of log odds ratio
}
Treat.order <- result$network$Treat.order
ts <- 1:length(Treat.order)
comps <- combn(ts, 2)
name <- rep(NA, ncol(comps))
for(j in 1:ncol(comps)){
name[j] <- paste0(Treat.order[comps[2,j]]," vs ", Treat.order[comps[1,j]])
}
odds$name <- name
if(is.null(ticks.position)){
if(result$network$response %in% c("binomial", "multinomial")){
ticks <- c(0.1, 0.2, 0.5, 1, 2, 5, 10)
} else if(result$network$response == "normal"){
ticks <- pretty(c(min(odds$lower, na.rm =TRUE), max(odds$upper, na.rm = TRUE)))
}
} else{
ticks <- ticks.position
}
p <- ggplot(odds, aes(y = OR, x = name)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .2) +
scale_x_discrete(limits = name) +
geom_hline(yintercept = 1, linetype = 2) +
coord_flip() +
theme_bw() +
theme(plot.margin = unit(c(1,label.margin,1,1), "lines"))
if(result$network$response %in% c("binomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = "Network Meta-analysis Forest plot") +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("multinomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = paste0("Network Meta-analysis Forest plot", ": Multinomial Category ", i)) +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("normal")){
p <- p + labs(x = "Treatment comparison", y = "Continuous Scale", title = "Network Meta-analysis Forest plot") +
scale_y_continuous(breaks = ticks, labels = ticks)
}
xlim.range <- ggplot_build(p)$layout$panel_ranges[[1]]$x.range
p <- p + geom_text(aes(label = paste0(sprintf("%0.2f", round(OR, digits = 2)), " [", sprintf("%0.2f", round(lower, digits = 2)) , ", ", sprintf("%0.2f", round(upper, digits = 2)), "]")), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = 1:length(comps[1,]))   # hjust = -1, vjust = 2)
median_name_location <- ifelse(length(odds[,1]) <= 3, length(comps[1,]) + 0.5, length(comps[1,]) + 1)
p <- p + geom_text(aes(label = "Median [lower, upper]"), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = median_name_location)
gt <- ggplot_gtable(ggplot_build(p))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
grid.draw(gt)
grid.newpage()
}
ncat <- ifelse(result$network$response == "multinomial", result$network$ncat, 1)
for(i in 1:(ncat-1)){
if(i != 1) grid.newpage()
if(result$network$response == "multinomial"){
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)[,,i]
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)[,,i]
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)[,,i]
} else{
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)
}
lower <- lower[upper.tri(lower)]
OR <- OR[upper.tri(OR)]
upper <- upper[upper.tri(upper)]
odds <- data.frame(lower = lower, OR = OR, upper = upper)
if(result$network$response %in% c("binomial", "multinomial")){
odds <- exp(odds) #report odds ratio instead of log odds ratio
}
Treat.order <- result$network$Treat.order
ts <- 1:length(Treat.order)
comps <- combn(ts, 2)
name <- rep(NA, ncol(comps))
for(j in 1:ncol(comps)){
name[j] <- paste0(Treat.order[comps[2,j]]," vs ", Treat.order[comps[1,j]])
}
odds$name <- name
if(is.null(ticks.position)){
if(result$network$response %in% c("binomial", "multinomial")){
ticks <- c(0.1, 0.2, 0.5, 1, 2, 5, 10)
} else if(result$network$response == "normal"){
ticks <- pretty(c(min(odds$lower, na.rm =TRUE), max(odds$upper, na.rm = TRUE)))
}
} else{
ticks <- ticks.position
}
p <- ggplot(odds, aes(y = OR, x = name)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .2) +
scale_x_discrete(limits = name) +
geom_hline(yintercept = 1, linetype = 2) +
coord_flip() +
theme_bw() +
theme(plot.margin = unit(c(1,label.margin,1,1), "lines"))
if(result$network$response %in% c("binomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = "Network Meta-analysis Forest plot") +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("multinomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = paste0("Network Meta-analysis Forest plot", ": Multinomial Category ", i)) +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("normal")){
p <- p + labs(x = "Treatment comparison", y = "Continuous Scale", title = "Network Meta-analysis Forest plot") +
scale_y_continuous(breaks = ticks, labels = ticks)
}
xlim.range <- ggplot_build(p)$layout$panel_ranges[[1]]$x.range
p <- p + geom_text(aes(label = paste0(sprintf("%0.2f", round(OR, digits = 2)), " [", sprintf("%0.2f", round(lower, digits = 2)) , ", ", sprintf("%0.2f", round(upper, digits = 2)), "]")), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = 1:length(comps[1,]))   # hjust = -1, vjust = 2)
median_name_location <- ifelse(length(odds[,1]) <= 3, length(comps[1,]) + 0.5, length(comps[1,]) + 1)
p <- p + geom_text(aes(label = "Median [lower, upper]"), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = median_name_location)
gt <- ggplot_gtable(ggplot_build(p))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
grid.draw(gt)
}
ncat <- ifelse(result$network$response == "multinomial", result$network$ncat, 1)
for(i in 1:(ncat-1)){
if(i != 1) grid.newpage()
if(result$network$response == "multinomial"){
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)[,,i]
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)[,,i]
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)[,,i]
} else{
lower <- relative.effects.table(result, summary_stat = "quantile", probs = (1- level)/2)
OR <- relative.effects.table(result, summary_stat = "quantile", probs = 0.5)
upper <- relative.effects.table(result, summary_stat = "quantile", probs = level + (1- level)/2)
}
lower <- lower[upper.tri(lower)]
OR <- OR[upper.tri(OR)]
upper <- upper[upper.tri(upper)]
odds <- data.frame(lower = lower, OR = OR, upper = upper)
if(result$network$response %in% c("binomial", "multinomial")){
odds <- exp(odds) #report odds ratio instead of log odds ratio
}
Treat.order <- result$network$Treat.order
ts <- 1:length(Treat.order)
comps <- combn(ts, 2)
name <- rep(NA, ncol(comps))
for(j in 1:ncol(comps)){
name[j] <- paste0(Treat.order[comps[2,j]]," vs ", Treat.order[comps[1,j]])
}
odds$name <- name
if(is.null(ticks.position)){
if(result$network$response %in% c("binomial", "multinomial")){
ticks <- c(0.1, 0.2, 0.5, 1, 2, 5, 10)
} else if(result$network$response == "normal"){
ticks <- pretty(c(min(odds$lower, na.rm =TRUE), max(odds$upper, na.rm = TRUE)))
}
} else{
ticks <- ticks.position
}
p <- ggplot(odds, aes(y = OR, x = name)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = .2) +
scale_x_discrete(limits = name) +
geom_hline(yintercept = 1, linetype = 2) +
coord_flip() +
theme_bw() +
theme(plot.margin = unit(c(1,label.margin,1,1), "lines"))
if(result$network$response %in% c("binomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = "Network Meta-analysis Forest plot") +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("multinomial")){
p <- p + labs(x = "Treatment comparison", y = "Odds Ratio", title = paste0("Network Meta-analysis Forest plot", ": Multinomial Category ", i)) +
scale_y_log10(breaks = ticks, labels = ticks)
} else if(result$network$response %in% c("normal")){
p <- p + labs(x = "Treatment comparison", y = "Continuous Scale", title = "Network Meta-analysis Forest plot") +
scale_y_continuous(breaks = ticks, labels = ticks)
}
xlim.range <- ggplot_build(p)$layout$panel_ranges[[1]]$x.range
p <- p + geom_text(aes(label = paste0(sprintf("%0.2f", round(OR, digits = 2)), " [", sprintf("%0.2f", round(lower, digits = 2)) , ", ", sprintf("%0.2f", round(upper, digits = 2)), "]")), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = 1:length(comps[1,]))   # hjust = -1, vjust = 2)
median_name_location <- ifelse(length(odds[,1]) <= 3, length(comps[1,]) + 0.5, length(comps[1,]) + 1)
p <- p + geom_text(aes(label = "Median [lower, upper]"), y = xlim.range[2] + diff(xlim.range)*label.multiplier, x = median_name_location)
gt <- ggplot_gtable(ggplot_build(p))
gt$layout$clip[gt$layout$name == "panel"] <- "off"
grid.draw(gt)
}
str(result)
(0.9/(1-0.9))/ (0.8/(1-0.8))
0.9/0.8
(0.1/(1-0.05))/ (0.05/(1-0.05))
(0.1/(1-0.1))/ (0.05/(1-0.05))
(0.95/(1-0.95))/ (0.90/(1-0.9))
0.95/0.9
####### manual generation
pack <- "mcnet"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
devtools::check(args = c('--no-examples'),manual = TRUE)
####### manual generation
pack <- "mcnet"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
devtools::check(args = c('--no-examples'),manual = TRUE)
####### manual generation
pack <- "mcnet"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
devtools::check(args = c('--no-examples'),manual = TRUE)
####### manual generation
pack <- "mcnet"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
devtools::check(args = c('--no-examples'),manual = TRUE)
####### manual generation
pack <- "mcnet"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
devtools::check(args = c('--no-examples'),manual = TRUE)
pack <- "mcnet"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
devtools::check(args = c('--no-examples'),manual = TRUE)
library(rjags)
Study <- rep(1:17, each = 2)
Treat <- c(1,3,1,3,1,3,1,3,1,2,1,3,1,3,2,3,1,3,1,3,2,3,1,3,2,3,1,2,1,2,2,3,1,2)
Outcomes <- matrix(c(3869,4014,8760,8941,2607,2593,4544,4539,1329,1367,2155,2149,1967,2039,4075,4073,1882,1901,3158,3196,4724,4711,3224,3224,640,644,3887,3811,4925,4983,2102,2161,1131,1141,200,167,570,547,149,163,341,336,45,36,113,138,49,46,156,143,66,68,62,56,127,158,52,63,15,10,61,44,130,111,21,21,31,32,433,331,937,781,157,135,300,295,37,25,98,78,207,136,218,223,130,112,73,50,155,126,25,17,20,22,18,11,82,74,109,83,37,38), ncol = 3)
covariate <- c(1,2,4,2,3,5,6,7,8,1,12,2,3,4,2,3,4)
colnames(Outcomes) <- c("Alive", "FnCVD", "FCVD")
#Outcomes <- Outcomes[,c(2,1,3)]
N <- apply(Outcomes, 1, sum)
network <- network.data(Outcomes, Study, Treat, N, response = "multinomial", covariate = covariate, covariate.model = "exchangeable")
result <- network.run(network)
Study <- rep(1:17, each = 2)
Treat <- c(1,3,1,3,1,3,1,3,1,2,1,3,1,3,2,3,1,3,1,3,2,3,1,3,2,3,1,2,1,2,2,3,1,2)
Outcomes <- matrix(c(3869,4014,8760,8941,2607,2593,4544,4539,1329,1367,2155,2149,1967,2039,4075,4073,1882,1901,3158,3196,4724,4711,3224,3224,640,644,3887,3811,4925,4983,2102,2161,1131,1141,200,167,570,547,149,163,341,336,45,36,113,138,49,46,156,143,66,68,62,56,127,158,52,63,15,10,61,44,130,111,21,21,31,32,433,331,937,781,157,135,300,295,37,25,98,78,207,136,218,223,130,112,73,50,155,126,25,17,20,22,18,11,82,74,109,83,37,38), ncol = 3)
covariate <- c(1,2,4,2,3,5,6,7,8,1,12,2,3,4,2,3,4)
colnames(Outcomes) <- c("Alive", "FnCVD", "FCVD")
#Outcomes <- Outcomes[,c(2,1,3)]
N <- apply(Outcomes, 1, sum)
Outcomes
network <- network.data(Outcomes, Study, Treat, N, response = "multinomial", covariate = covariate, covariate.model = "exchangeable")
result <- network.run(network)
calculate.deviance(result)
cardiovascular
network.autocorr.diag(result)
network.autocorr.diag(result, lags = c(0,2,4,100))
network.autocorr.diag(result, lags = c(0,2,4,100))
help(network.run)
network.autocorr.plot(result)
network.autocorr.plot(result)
network.autocorr.plot(result)
network.covariate.plot(result)
network.covariate.plot(result, base.treatment = 1, comparison.treatment = 2, base.category = 1, comparison.cateogory = 2)
network.covariate.plot(result, base.treatment = 1, comparison.treatment = 2, base.category = 1, comparison.category = 2)
network.cumrank.tx.plot(result)
####### manual generation
pack <- "mcnet"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
devtools::check(args = c('--no-examples'),manual = TRUE)
